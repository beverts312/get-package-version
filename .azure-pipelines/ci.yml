trigger:
- master

pr: none

pool:
  vmImage: 'Ubuntu-16.04'

resources:
  repositories:
  - repository: templates
    type: github
    name: swellaby/azure-pipelines-templates
    endpoint: swellaby

steps:
- checkout: self
  persistCredentials: false
  clean: true

- template: templates/yml/node/combo/npm-build-validation-xunit-cobertura.yml@templates
  parameters:
    publishTestResults:
      taskDisplayName: 'Publish unit test results'
      testResultsFormat: 'JUnit'
      testResultsFiles: 'xunit.xml'
      searchFolder: '$(Build.SourcesDirectory)/.testresults/unit'
      testRunTitle: 'get-package-version::Unit Tests::CI - Build $(Build.BuildId)'

- script: |
    bash <(curl -s https://codecov.io/bash) -t $(codecovToken)
  displayName: 'Publish coverage to Codecov'

- script: |
    git checkout master
    git config user.name $(githubUser)
    git config user.email $(githubEmail)
    npm -f version $(packageBumpType) -m "chore: Bumped to version %s from release pipeline $(succinctAllSkipTokens)"
    export PACKAGE_VERSION=$(node -e "console.log(require('./package.json').version);")
    echo "##vso[task.setVariable variable=packageVersion]$PACKAGE_VERSION"
    git add package-lock.json
    git commit -n -m "chore: Bumped to version $PACKAGE_VERSION from release pipeline $(succinctAllSkipTokens)"
    git push https://$(githubPat)@github.com/swellaby/get-package-version.git
  displayName: 'Bump version, tag, and check-in'

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'SonarCloud Swellaby'
    organization: swellaby
    scannerMode: CLI
    extraProperties: |
      sonar.projectVersion=$(packageVersion)

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run code analysis'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish quality gate result'

- task: ArchiveFiles@2
  displayName: 'Archive: full repo'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: tar
    tarCompression: gz
    archiveFile: '$(repoArchivePath)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifact: full repo'
  inputs:
    PathtoPublish: '$(repoArchivePath)'
    ArtifactName: '$(repoArtifactName)'

- script: npm pack
  displayName: 'npm pack'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: package tarball'
  inputs:
    PathtoPublish: '$(packageTarballPath)'
    ArtifactName: '$(packageTarballArtifactName)'
